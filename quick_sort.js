/* 
სწრაფი სორტირების ალგორითმი

*/


const arr = [0,3,2,5,6,8,23,9,4,2,1,2,9,6,4,1,7,-1, -5, 23,6,2,35,6,3,32,9,4,2,1,2,9,6,4,1,7,-1, -5, 23,9,4,2,1,2,9,6,4,1,7,-1, -5, 23,]


function quickSort(array) {

    //ფუნქციიდან გამოსვლის მომენტი
    if (array.length <= 1) {
        return array
    }
    //გადმოცემულ მასივის სიგრძეს ვყოფთ შუაზე
    let pivotIndex = Math.floor(array.length / 2);
    //ვიღებთ მასივის შუა ელემენტს
    let pivot = array[pivotIndex]
    //ვქმნით ორ ახალ მასივს სადაც ერთში მოვათავსებთ შუა ელემენტზე პატარა ელემენტს და მეორეში მასზე დიდ ელემენტს
    // ნაკლები     
    let less = []
    //მეტი
    let greater = []
    for (let i = 0; i < array.length; i++) {
        // გავდივართ მასივს და ვანაწილებთ შესაბამისად ახალ მასივებში. გარდა იმ შემთხვევისა როცა ციკლის i-ი მიუთითებს შუა ელემენტის ინდექსზე ამას უბრალოდ გავატარებთ
        if(i === pivotIndex)
            continue
        if (array[i] < pivot) {
            less.push(array[i])
        } else {
            greater.push(array[i])
        }
    }
    //ვაბრუნებთ მასივს სადაც თავში ვსვამთ ნაკლებებისგან შედგენილ მასივს, მედეგ ჩვენს მიერ არჩეულ შუა ელემენტს და ბოლოს მეტებისგან შექმნილ მასივს
    //და ამას ვიძახებთ მანამდე სანამ არ მივა ფუნქციიდან გამოსვლის მომენატამდე ანუ გადაცემული მასივის სიგრძე (<=1)-ზე 
    return [...quickSort(less), pivot, ...quickSort(greater)]
}

console.log(quickSort(arr))
